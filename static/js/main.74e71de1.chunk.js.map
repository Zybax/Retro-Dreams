{"version":3,"sources":["Components/Container.jsx","Components/Header.jsx","Components/Grid.jsx","Components/NotFound.jsx","Components/PageNumbers.jsx","Containers/GridContainer.jsx","Components/Search.jsx","Containers/AudioContainer.jsx","Containers/App.jsx","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Header","Grid","NotFound","PageNumbers","pageNumbers","map","number","currentPage","key","id","onClick","handlePageClick","MusicItem","lazy","__webpack_require__","e","then","bind","clientID","process","GridContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","apiRequest","fetch","concat","genre","query","res","json","setState","data","catch","err","console","error","message","componentDidMount","componentDidUpdate","prevProps","prevState","event","parseInt","target","paginationItemsSetup","indexOfLastItem","state","itemsPerPage","indexOfFirstItem","slice","pageNumbersSetup","i","Math","ceil","length","push","_this2","react","fallback","track","background","artwork_url","artist","user","username","name","title","url","stream_url","currentTrackhandler","currentTrackHandler","Component","Search","action","onChange","searchValueHandler","onKeyPress","searchKeyPressHandler","type","placeholder","aria-label","searchSubmitHandler","AudioContainer","toogleAudio","audioTrack","document","querySelector","playButton","timeline","progressionBar","playhead","totalTime","currentTime","volumeIcon","volumeBar","volumeLine","volumeHead","duration","window","onload","addListeners","getAttribute","paused","classList","replace","play","pause","timeUpdate","getTrackDuration","timerUpdate","progressionUpdate","totalMinutes","totalSeconds","currentMinutes","currentSeconds","innerHTML","formatTime","playPercent","style","width","marginLeft","readyState","getPosition","el","offsetLeft","setProgressionPosition","clickPercent","toogleVolume","muted","display","volumeUpdate","setVolume","volumeBarUpdate","volumeLevel","volume","volumePercent","bar","clientX","offsetWidth","mouseUpEventRemove","removeEventListener","playHeadMove","volumeHeadMove","mouseDown","func","addEventListener","minutes","seconds","formattedMin","toString","formattedSec","src","App","preventDefault","searchInput","value","currentTrack","GridContainer_GridContainer","AudioContainer_AudioContainer","Boolean","location","hostname","match","ReactDOM","render","Containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74e71de1.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Container(props) {\n  return (\n    <div className={'container'}>\n    {props.children}\n</div>\n  )\n}\n","import React from 'react';\n\nexport default function Header() {\nreturn (\n<header className={'header d-flex justify-content-center flex-wrap align-items-start align-content-arround'}>\n  <div className={'text-container d-flex justify-content-center flex-wrap align-items-center '}>\n\n  <div className={'logo-container d-flex flex-column align-items-center'}>\n      <h1 className={'logo'}>RETRO</h1>\n      <h3 className={'dreams'}>Dreams</h3>\n  </div>\n\n    <h4 className={'header__sub-title'}>\n    Listen To Some Rad Synthwave Tracks <br/> Search by Album, Artist or Track Name </h4>\n  </div>\n</header>\n)\n}","import React from 'react'\n\nexport default function Grid(props) {\n  return (\n    <div className={'row grid'}>\n    {props.children}\n  </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div className={'not-found d-flex justify-content-center'}>\n        <p className={'not-found-message'}>Not results found... remember you can only search synthwave related tracks here ;)</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function PageNumbers(props) {\n  return (\n    <div className={'pagination-container d-flex justify-content-center'}>\n      <ul className={'pagination-list d-flex justify-content-center'}>{\n      props.pageNumbers.map(number => {\n      return (\n        <li\n        className={'pagination-list-item' + (props.currentPage === number ? ' pagination-list-current':'')}\n        key={number}\n        id={number}\n        onClick={props.handlePageClick}\n        >\n          {number}\n        </li>\n      );\n      })\n    }\n      </ul>\n    </div>\n  )\n}\n\nPageNumbers.propTypes = {\n    pageNumbers: PropTypes.array.isRequired,\n    handlePageClick: PropTypes.func.isRequired\n  };\n","import React, { Component, lazy, Suspense } from 'react';\nimport Grid from '../Components/Grid';\nimport PropTypes from 'prop-types';\nimport NotFound from '../Components/NotFound';\nimport PageNumbers from '../Components/PageNumbers';\n\nconst MusicItem = lazy(() => import('./../Containers/MusicItem'));\nconst clientID = process.env.REACT_APP_SC_API_KEY;\n\nexport default class GridContainer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      currentPage: 1,\n      itemsPerPage: 18\n    }\n  }\n\n  // Return tracks from the api\n  apiRequest = () => {\n    fetch(`https://api.soundcloud.com/tracks?genres=${this.props.genre}&client_id=${clientID}&q=${this.props.query}&limit=100`)\n      .then((res) => res.json())\n      .then((json) => this.setState({data : json}))\n      .catch((err) => {\n        console.error(err.message);\n      })\n  }\n\n  // Calls the api when the component renders\n  componentDidMount = () => {\n    this.apiRequest();\n  }\n\n  // Calls the api when search query changes\n  componentDidUpdate = (prevProps, prevState) => {\n    if(prevProps.query !== this.props.query){\n      this.setState({\n        currentPage: 1\n      });\n      this.apiRequest();\n    }\n  }\n\n  // Change page number\n  handlePageClick = (event) => {\n    this.setState({\n      currentPage: parseInt(event.target.id)\n    });\n  }\n\n  // Sets the current items of one page\n  paginationItemsSetup = () => {\n    const indexOfLastItem = this.state.currentPage * this.state.itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n    const currentItems = this.state.data.slice(indexOfFirstItem, indexOfLastItem);\n\n    return currentItems;\n  }\n\n  // Sets the number of pages\n  pageNumbersSetup = () => {\n    const pageNumbers = [];\n\n    // Number of pages\n    for (let i = 1; i <= Math.ceil(this.state.data.length / this.state.itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    return pageNumbers;\n  }\n\n  render() {\n    return (\n      <div className = 'grid-container'>\n        <Suspense fallback={<div>Loading...</div>}>\n          {this.state.data.length !== 0 ?\n            <Grid>\n              {\n                  this.paginationItemsSetup().map((track) =>{\n\n                  let background = track.artwork_url;\n                  let artist = track.user.username;\n                  let name = track.title;\n                  let url = `${track.stream_url}?client_id=${clientID}`;\n\n                  return( <MusicItem\n                    key = {url}\n                    background = {background}\n                    artist = {artist}\n                    name = {name}\n                    url = {url}\n                    currentTrackhandler = {this.props.currentTrackHandler}\n                />)\n              })\n              }\n            </Grid> : <NotFound/>\n            }\n          </Suspense>\n           <PageNumbers\n           pageNumbers = {this.pageNumbersSetup()}\n           handlePageClick = {this.handlePageClick}\n           currentPage={this.state.currentPage}\n           />\n\n      </div>\n    )\n  }\n}\n\n/***  Proptypes  ***/\n\nGridContainer.propTypes = {\n  currentTrackHandler: PropTypes.func,\n  query: PropTypes.string.isRequired,\n  genre:PropTypes.string.isRequired\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Search(props) {\n  return (\n    <div className={'search-form-container d-flex justify-content-center flex-wrap align-items-center'}>\n      <form className={'search-form d-flex justify-content-center  align-items-center'} action=''>\n        <input\n        onChange={props.searchValueHandler}\n        onKeyPress={props.searchKeyPressHandler}\n        className={'form-control input-search'} type='text' placeholder='Search' aria-label='Search'/>\n        <button onClick={props.searchSubmitHandler} type='button' className={'btn custom-btn btn-primary'}>Search</button>\n      </form>\n    </div>\n  )\n}\n\n/***  Proptypes  ***/\n\nSearch.propTypes = {\n  searchSubmitHandler: PropTypes.func,\n  searchValueHandler: PropTypes.func,\n  searchKeyPressHandler: PropTypes.func\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nexport default class AudioContainer extends Component {\n\n  // Plays a track when received through props\n  componentDidUpdate = (prevProps) => {\n    if (this.props.url !== prevProps.url) {\n      this.toogleAudio();\n    }\n  }\n\n  componentDidMount = () => {\n    this.audioTrack  = document.querySelector('#audio-player');\n    this.playButton = document.querySelector('#playButton');\n    this.timeline = document.querySelector('#timeline');\n    this.progressionBar = document.querySelector('#progression-bar ');\n    this.playhead = document.querySelector('#playhead');\n    this.totalTime = document.querySelector('#timer-total-time');\n    this.currentTime = document.querySelector('#timer-current-time');\n    this.volumeIcon = document.querySelector('#volume-icon');\n    this.volumeBar = document.querySelector('#volume-bar');\n    this.volumeLine = document.querySelector('#volume-line');\n    this.volumeHead = document.querySelector('#volume-head');\n    this.duration = '';\n    window.onload = this.addListeners();\n  }\n\n  // Play and pause audio\n  toogleAudio = () => {\n    if (this.audioTrack.getAttribute('src') !== ''){\n      if (this.audioTrack.paused){\n        this.playButton.classList.replace('fa-play','fa-pause');\n        this.audioTrack.play();\n      }\n      else\n      {\n        this.playButton.classList.replace('fa-pause','fa-play');\n        this.audioTrack.pause();\n      }\n    }\n }\n\n // Update the timer and the progression bar\ntimeUpdate = () => {\n  if (this.duration === this.getTrackDuration())  this.getTrackDuration();\n  if (this.audioTrack.currentTime ===  this.duration){\n    this.playButton.classList.replace('fa-pause','fa-play');\n  }\n\n  this.timerUpdate();\n  this.progressionUpdate();\n}\n\n// this funtions format the time so it is shown as mm:ss\nformatTime(minutes, seconds){\n let formattedMin = minutes.toString().length === 1 ? `0${minutes}`: minutes;\n let formattedSec = seconds.toString().length === 1 ? `0${seconds}`: seconds;\n\n return `${formattedMin}:${formattedSec}`\n}\n\n// Update the timer\ntimerUpdate = () => {\n const totalMinutes = parseInt( this.duration / 60, 10);\n const totalSeconds = parseInt( this.duration % 60);\n\n let currentMinutes = parseInt( this.audioTrack.currentTime / 60, 10);\n let currentSeconds = parseInt( this.audioTrack.currentTime % 60);\n\n this.totalTime.innerHTML = this.formatTime( totalMinutes, totalSeconds);\n this.currentTime.innerHTML = this.formatTime( currentMinutes, currentSeconds);\n\n}\n\n// Fills the progression bar\nprogressionUpdate = () => {\n  let playPercent = 100 * ( this.audioTrack.currentTime /  this.duration);\n  this.timeline.style.width = playPercent + '%';\n  this.playhead.style.marginLeft = (playPercent - 1.2) + '%';\n}\n\n// Gets audio file duration\ngetTrackDuration = () =>{\n  if( this.audioTrack.readyState > 0)\n    {\n      this.duration = this.audioTrack.duration;\n    }\n}\n\n// Returns elements left position relative to top-left of viewport\ngetPosition = (el) => {\n    return el.offsetLeft;\n}\n\n// Sets new position of the progression bar when clicked\nsetProgressionPosition = (event) => {\n    if (!this.duration) this.getTrackDuration();\n    this.audioTrack.currentTime = ( this.clickPercent(event,  this.progressionBar) *  this.duration);\n  }\n\n // Toggles the volume\ntoogleVolume = () => {\n    if ( this.audioTrack.muted){\n      this.volumeIcon.classList.replace('fa-volume-mute','fa-volume-up');\n      this.volumeLine.style.display = 'block';\n      this.volumeHead.style.display = 'block';\n      this.audioTrack.muted = false;\n    }\n    else\n    {\n      this.volumeIcon.classList.replace('fa-volume-up','fa-volume-mute');\n      this.volumeLine.style.display = 'none';\n      this.volumeHead.style.display = 'none';\n      this.audioTrack.muted = true;\n    }\n }\n\n// Update the volume and the volume bar\nvolumeUpdate = (event) => {\n  this.volumeLine.style.display = 'block';\n  this.volumeHead.style.display = 'block';\n  this.setVolume(event);\n  this.volumeBarUpdate();\n}\n\n// Sets audio volume\nsetVolume = (event) => {\n  let volumeLevel = this.clickPercent(event,  this.volumeBar);\n\n  if(volumeLevel <= 0){\n    this.audioTrack.volume = 0;\n  }\n  else if(volumeLevel >= 1){\n    this.audioTrack.volume = 1;\n  }\n  else{\n    this.audioTrack.volume = volumeLevel;\n  }\n\n}\n\n// Fills the volume  bar\nvolumeBarUpdate = () => {\n  let volumePercent = 100 * ( this.audioTrack.volume / 1);\n  this.volumeLine.style.width = volumePercent + '%';\n  this.volumeHead.style.marginLeft = (volumePercent - 6) + '%';\n}\n\n// Returns the percent of the bar when clicked related to the bar's width\nclickPercent = (event, bar) => {\n  const newPercent = (event.clientX -  this.getPosition(bar)) / bar.offsetWidth;\n  return newPercent;\n}\n\n// Removes events on mouse up\nmouseUpEventRemove = () => {\n    window.removeEventListener('mousemove',  this.playHeadMove, true);\n    window.removeEventListener('mousemove',  this.volumeHeadMove, true);\n}\n\n// Adds mousemove event on mousedown with a specified function\nmouseDown = (event, func) => {\n  window.addEventListener('mousemove', func, true);\n}\n\nplayHeadMove = (event) => {\n  this.setProgressionPosition(event);\n}\n\nvolumeHeadMove = (event) => {\n  this.volumeUpdate(event);\n}\n\n// Listeners\naddListeners = () =>{\n  this.audioTrack.addEventListener('timeupdate',  this.timeUpdate, false);\n  this.playButton.addEventListener('click',  this.toogleAudio, false);\n  this.progressionBar.addEventListener('click',  this.setProgressionPosition, false);\n  this.progressionBar.addEventListener('mousedown', (event) => { this.mouseDown(event,  this.playHeadMove)}, false);\n  this.playhead.addEventListener('mousedown', (event) => { this.mouseDown(event, this.playHeadMove)}, false);\n  this.volumeBar.addEventListener('click',  this.volumeUpdate, false);\n  this.volumeBar.addEventListener('mousedown', (event) => {  this.mouseDown(event, this.volumeHeadMove)}, false);\n  this.volumeIcon.addEventListener('click',  this.toogleVolume, false);\n  this.volumeHead.addEventListener('mousedown', (event) => { this.mouseDown(event, this.volumeHeadMove)}, false);\n  window.addEventListener('mouseup',  this.mouseUpEventRemove, false);\n}\n\n  render() {\n    return (\n      <div className ={'audio-container'}>\n        <div className={'audio-player'}>\n          <div className={'audio-player__controls'}>\n            <div className={'audio-player__button-container'}>\n              <i id='playButton' className={'fas fa-play play-button'}></i>\n            </div>\n\n            <div className={'audio-player__timer-container'}>\n              <span id='timer-current-time' className={'timer-current-time'}> 00:00 </span>\n              <span className={'timer-divider'}> / </span>\n              <span id='timer-total-time' className={'timer-total-time'}> 00:00 </span>\n            </div>\n\n            <div className={'audio-player__range-container'}>\n              <div id='progression-bar' className={'progression-bar'}>\n                <div id='timeline' className={'progression-bar__timeline'}></div>\n                <div id='playhead' className={'progression-bar__playhead'}></div>\n              </div>\n            </div>\n\n            <div className={'audio-player__volume-container'}>\n              <div className={'volume-icon-container'}>\n                <i id='volume-icon' className={'fas fa-volume-up'}></i>\n              </div>\n\n              <div className={'volume-range'}>\n                <div id='volume-bar' className={'volume-bar'}>\n                  <div id='volume-line' className={'volume-bar__line'}></div>\n                  <div id='volume-head' className={'volume-bar__head'}></div>\n                </div>\n              </div>\n            </div>\n\n              <audio id={'audio-player'} src={this.props.url}></audio>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n/***  Proptypes  ***/\n\nAudioContainer.propTypes = {\n  name: PropTypes.string,\n  artist: PropTypes.string,\n  url: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport Container from '../Components/Container';\nimport Header from './../Components/Header';\nimport GridContainer from './GridContainer';\nimport Search from './../Components/Search';\nimport AudioContainer from './AudioContainer';\nimport './../index.scss';\nimport 'whatwg-fetch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentTrack: '',\n      searchInput: '',\n      query: '*'\n    }\n  }\n\n  // Sets the search query for the api call\n  searchSubmitHandler = (event) => {\n    event.preventDefault();\n    this.setState({query: this.state.searchInput});\n  }\n\n  // Calls searchSubmitHandler when you press enter in the search textbox\n  searchKeyPressHandler = (event) => {\n    if (event.key === 'Enter') {\n      this.searchSubmitHandler(event);\n    }\n  }\n\n  // Adds the value from the search textbox into the state\n  searchValueHandler = (event) => {\n    event.preventDefault();\n    this.setState({searchInput: event.target.value});\n  }\n\n  // Sets the current track being played\n  currentTrackHandler = (track) => {\n    this.setState({currentTrack : track});\n  }\n\n  render() {\n    return (\n      <div className = 'app'>\n      <Container>\n        <Header/>\n        <Search\n        searchKeyPressHandler={this.searchKeyPressHandler}\n        searchValueHandler={this.searchValueHandler}\n        searchSubmitHandler={this.searchSubmitHandler}\n        />\n\n        <GridContainer\n            genre={'synthwave'}\n            query={this.state.query}\n            currentTrackHandler={this.currentTrackHandler}\n        />\n\n        <AudioContainer url={this.state.currentTrack}/>\n      </Container>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}